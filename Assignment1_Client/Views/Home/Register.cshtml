@model Assignment1_Api.Models.Staff
 
@if (ViewData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">@ViewData["ErrorMessage"]</div>
}
@if (ViewData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">@ViewData["SuccessMessage"]</div>
}
 
<h1>Register Page</h1>
<hr />
<div class="container">
    <div id="message"></div>
    <div class="row">
        <div class="col-md-4">
            <form id="registerForm">
          
                <div class="form-group mb-2">
                    <label asp-for="Name" class="control-label mb-1"></label>
                    <input asp-for="Name" type="text" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group mb-2">
                    <label asp-for="Password" class="control-label mb-1"></label>
                    <input asp-for="Password" class="form-control" type="password" required />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>

                <div class="form-group mb-2">
                    <input type="submit" value="Register" class="btn btn-primary" />
                </div>
                <div>
                    Already have an account? <a asp-action="Index">Login</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.getElementById('registerForm').addEventListener('submit', async function (event) {
            event.preventDefault(); 

            const formData = new FormData(this);

            const jsonData = Object.fromEntries(formData.entries());

            try {

                //check duplicate
                const checkResponse = await fetch(`http://localhost:5267/api/Staffs/Name/${encodeURIComponent(jsonData.Name)}`, {
                    method: 'GET',
                    headers: {
                        'Accept': 'application/json',
                    }
                });

                if (checkResponse.ok) {
                    // Name already exists
                    document.getElementById('message').innerHTML = `<div class="alert alert-danger">Name already exists.</div>`;
                    return;
                } else if (checkResponse.status !== 404) {
                    // Handle unexpected error
                    throw new Error('Error checking name availability');
                }

                //register
                const response = await fetch('http://localhost:5267/api/Staffs', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(jsonData)
                });

                if (response.ok) {
                    const result = await response.json();
                    document.getElementById('message').innerHTML = `<div class="alert alert-success">Registered new account successfully.</div>`;
                    setTimeout(() => window.location.href = '/Home/Index', 2000);
                } else {
                    
                    const errorData = await response.json();
                    document.getElementById('message').innerHTML = `<div class="alert alert-danger">${errorData.title || 'An error occurred.'}</div>`;
                }
            } catch (error) {
                document.getElementById('message').innerHTML = `<div class="alert alert-danger">An error occurred: ${error.message}</div>`;
            }
        });
    </script>
} 
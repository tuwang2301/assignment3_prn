@model Assignment1_Api.Models.Staff

@{
    ViewData["Title"] = "View";
}

<h1>View</h1>

<h4>Staff</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form id="createStaffForm" asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="Role" class="control-label"></label>
                <select name="Role" id="Role">
                    <option value="1">Admin</option>
                    <option value="0">Staff</option>
                </select>
                <span asp-validation-for="Role" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        document.getElementById("createStaffForm").addEventListener("submit", function (event) {
            event.preventDefault();
            const createStaffUrl = "http://localhost:5267/api/Staffs"; 

            const formData = new FormData(document.getElementById("createStaffForm"));
            const requestData = {};
            formData.forEach((value, key) => {
                requestData[key] = value;
            });

            fetch(createStaffUrl, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(requestData)
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Staff created successfully:', data);
                    window.location.replace("http://localhost:5207/Staffs");
                    alert("Staff created successfully !");

                })
                .catch(error => {
                    console.error('Error creating staff:', error);
                    alert("Error creating Staff !");
                });
        });
    </script>
}
